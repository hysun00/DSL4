@0x00   0x0D // limma
@0x01   0x00
@0x02   0x1D // limmb
@0x03   0x27 // 39 in decimal
@0x04   0x09 // call 0x30, Horizaontal write
@0x05   0x30
@0x06   0x96 // bequ 0x11 regA=160d
@0x07   0x0C
@0x08   0x01 // lwb 0x01
@0x09   0x01
@0x0A   0x07 // jmp 0x04
@0x0B   0x04

@0x0C   0x0D // limma
@0x0D   0x00
@0x0E   0x1D // limmb
@0x0F   0x4F // 79 in decimal
@0x10   0x09 // call 0x30, Horizaontal write
@0x11   0x30
@0x12   0x96 // bequ 0x11 regA=0d160
@0x13   0x18
@0x14   0x01 // lwb 0x01
@0x15   0x01
@0x16   0x07 // jmp 0x11
@0x17   0x10

@0x18   0x0D // limma
@0x19   0x34 // 52 in decimal
@0x1A   0x1D // limmb
@0x1B   0x00
@0x1C   0x09 // call 0x42, Vertical write
@0x1D   0x42
@0x1E   0x96 // bequ 0x11 0d120<regB
@0x1F   0x24
@0x20   0x00 // lwa 0x00
@0x21   0x00
@0x22   0x07 // jmp 0x11
@0x23   0x1C

@0x24   0x0D // limma
@0x25   0x6A // 106 in decimal
@0x26   0x1D // limmb
@0x27   0x00
@0x28   0x09 // call 0x42, Vertical write
@0x29   0x42
@0x2A   0x96 // bequ 0x11 0d120<regB
@0x2B   0xA0
@0x2C   0x00 // lwa 0x00
@0x2D   0x00
@0x2E   0x07 // jmp 0x11
@0x2F   0x28

// Horizontal write function
@0x30   0x02 // call 0xE0, write X to VGA X
@0x31   0xB0
@0x32   0x03 // call 0xAC, write Y to VGA Y
@0x33   0xB1
@0x34   0x02 // swa 0x00
@0x35   0x00
@0x36   0x0D // limma
@0x37   0x01
@0x38   0x02 // call 0xE1, write pixel color
@0x39   0xB2
@0x3A   0x00 // lwa 0x00
@0x3B   0x00
@0x3C   0x54 // addiu A 1
@0x3D   0x03 // swb 0x01
@0x3E   0x01
@0x3F   0x1D // limmb
@0x40   0xA0 // 160 in decimal
@0x41   0x0A // rtn

// Vertical write function
@0x42   0x02 // call 0xE0, write X to VGA X
@0x43   0xB0
@0x44   0x03 // call 0xAC, write Y to VGA Y
@0x45   0xB1
@0x46   0x02 // swa 0x00
@0x47   0x00
@0x48   0x0D // limma
@0x49   0x01
@0x4A   0x02 // call 0xE1, write pixel color
@0x4B   0xB2
@0x4C   0x65 // addiu B 1
@0x4D   0x0D // limma
@0x4E   0x78 // 120 in decimal
@0x4F   0x0A // rtn


///////////////////////////////////////////////////////////Loop  Body/////////////////////////////////////////////////////////
//Read [0XB0] TO 0X10
@0x50   0x00 // lwa 0xA0
@0x51   0xA0
@0x52   0x02 // swa 0x10
@0x53   0x10

//Read X TO 0X11
@0x54   0x00 // lwa 0xA1
@0x55   0xA1
@0x56   0x02 // swa 0x11
@0x57   0x11

//Read Y TO 0X12
@0x58   0x00 // lwa 0xA2
@0x59   0xA2
@0x5A   0x02 // swa 0x12
@0x5B   0x12

//Read [0XB3] TO 0X13
@0x5C   0x00 // lwa 0xA3
@0x5D   0xA3
@0x5E   0x02 // swa 0x13
@0x5F   0x13

//////Check X//////
@0x60   0x00 // lwa 0X11
@0x61   0x11

//If (X < 53D )
@0x62   0x1D // limmb 53D
@0x63   0x35
@0x64   0xB6 // blt 0X6C
@0x65   0x6C

//else if (X < 107d)
@0x66   0x1D // limmb 107D
@0x67   0x6B
@0x68   0xB6 // blt 0X78
@0x69   0x78

//else
@0x6A   0x07 // jmp 0x84
@0x6B   0x84
///////////////////

///X<53, Check Y///
@0x6C   0x00 // lwa 0X12
@0x6D   0x12

//If (Y < 40D )
@0x6E   0x1D // limmb 40D
@0x6F   0x28
@0x70   0xB6 // blt 0XD4
@0x71   0xD4

//else if (Y < 80d)
@0x72   0x1D // limmb 80D
@0x73   0x50
@0x74   0xB6 // blt 0XC4
@0x75   0xC4

//else
@0x76   0x07 // jmp 0xE0
@0x77   0xE0
////////////////////

//53<=X<107, Check Y//
@0x78   0x00 // lwa 0X12
@0x79   0x12

//If (Y < 40D )
@0x7A   0x1D // limmb 40D
@0x7B   0x28
@0x7C   0xB6 // blt 0XCC
@0x7D   0xCC

//else if (Y < 80d)
@0x7E   0x1D // limmb 80D
@0x7F   0x50
@0x80   0xB6 // blt 0XC0
@0x81   0xC0

//else
@0x82   0x07 // jmp 0xD0
@0x83   0xD0
////////////////////

/////107<=X, Check Y/////
@0x84   0x00 // lwa 0X12
@0x85   0x12

//If (Y < 40D )
@0x86   0x1D // limmb 40D
@0x87   0x28
@0x88   0xB6 // blt 0XDC
@0x89   0xDC

//else if (Y < 80d)
@0x8A   0x1D // limmb 80D
@0x8B   0x50
@0x8C   0xB6 // blt 0XC8
@0x8D   0xC8

//else
@0x8E   0x07 // jmp 0xD8
@0x8F   0xD8
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////VGA Control/////////////////////////////////////////////////////////
@0x90   0x00 // lwa 0x15, previous mouse X
@0x91   0x15
@0x92   0x02 // swa 0xB0, write X to VGA X
@0x93   0xB0
@0x94   0x01 // lwb 0x16, previous mouse Y
@0x95   0x16
@0x96   0x03 // swb 0xB1, write Y to VGA Y
@0x97   0xB1
@0x98   0x00 // lwa 0x18, previous pixel color
@0x99   0x18
@0x9A   0x02 // swa 0xB2, write pixel color
@0x9B   0xB2

@0x9C   0x00 // lwa 0x11, current mouse X
@0x9D   0x11
@0x9E   0x02 // swa 0xB0, write X to VGA X
@0x9F   0xB0
@0xA0   0x02 // swa 0x15, previous mouse X
@0xA1   0x15
@0xA2   0x01 // lwb 0x12, current mouse Y
@0xA3   0x12
@0xA4   0x03 // swb 0xB1, write Y to VGA Y
@0xA5   0xB1
@0xA6   0x03 // swb 0x16, previous mouse Y
@0xA7   0x16
@0xA8   0x00 // lwa 0xB2, pixel color
@0xA9   0xB2
@0xAA   0x02 // swa 0x18, write current pixel color
@0xAB   0x18
@0xAC   0x0D // limma
@0xAD   0x01
@0xAE   0x02 // swa 0xB2, write pixel color
@0xAF   0xB2
@0xB0   0x00 // lwa 0x10, current mouse status
@0xB1   0x10
@0xB2   0x02 // swa 0xC0, write X to 8-bit LSB LEDs
@0xB3   0xC0
@0xB4   0x01 // lwb 0x13, current mouse Z
@0xB5   0x13
@0xB6   0x03 // swb 0xC1, write Z to 8-bit MSB LED
@0xB7   0xC1
@0xB8   0x03 // swb 0xB3, write Z to VGA color
@0xB9   0xB3
@0xBA   0x08 // IDLE
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////Car Control/////////////////////////////////////////////////////////
// brake
@0xC0   0x0D // limma 0x00
@0xC1   0x00
@0xC2   0x07 // jmp 0XE4
@0xC3   0XE4

// left
@0xC4   0x0D // limma 0x02
@0xC5   0x02
@0xC6   0x07 // jmp 0XE4
@0xC7   0XE4

// right
@0xC8   0x0D // limma 0x01
@0xC9   0x01
@0xCA   0x07 // jmp 0XE4
@0xCB   0XE4

// forward
@0xCC   0x0D // limma 0x14
@0xCD   0x08
@0xCE   0x07 // jmp 0XE4
@0xCF   0XE4

// backward
@0xD0   0x0D // limma 0x04
@0xD1   0x04
@0xD2   0x07 // jmp 0XE4
@0xD3   0XE4

// forward left
@0xD4   0x0D // limma 0x0A
@0xD5   0x0A
@0xD6   0x07 // jmp 0XE4
@0xD7   0XE4

// backward right
@0xD8   0x0D // limma 0x05
@0xD9   0x05
@0xDA   0x07 // jmp 0XE4
@0xDB   0XE4

// forward right
@0xDC   0x0D // limma 0x09
@0xDD   0x09
@0xDE   0x07 // jmp 0XE4
@0xDF   0XE4

// backward left
@0xE0   0x0D // limma 0x06
@0xE1   0x06
@0xE2   0x07 // jmp 0XE4
@0xE3   0XE4
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////Write Outputs////////////////////////////////////////////////////////
//Write a control word to IR
@0xE4   0x02 // swa 0x90
@0xE5   0x90
//Write a control word to 7 Seg
@0xE6   0x02 // swa 0xD0
@0xE7   0xD0
@0xE8   0x07 // jmp 0x90
@0xE9   0x90
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////Time Display/////////////////////////////////////////////////////////
@0xEA   0x02
@0xEB   0xB4
@0xEC   0x08 // Sleep
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////Interruption  Response////////////////////////////////////////////////////
@0xFE   0x50 //Mouse
@0xFF   0xEA //Timer