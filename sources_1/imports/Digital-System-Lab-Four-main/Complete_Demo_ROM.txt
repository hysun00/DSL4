///////////////////////////////////////////////////////Timer  Interrupt///////////////////////////////////////////////////////
@0x00   0x01 // sw $B , [0x0A]
@0x01   0x0A

///////////////////forward///////////////////
// reset timer
@0x02   0x02 // lw [0xF2] , $A
@0x03   0xF2
// read timer & check the elapsed time
@0x04   0x00 // sw $A , [0xF0]
@0x05   0xF0
@0x06   0x96 // beq [0x0C]
@0x07   0x0C
// move the car
@0x08   0x09 // call [0xC0]
@0x09   0xC0
@0x0A   0x07 // jmp [0x04]
@0x0B   0x04
// Call the braking function
@0x0C   0x09 // call [0xB0]
@0x0D   0xB0
// Jump to next
@0x0E   0x07 // jmp [0x10]
@0x0F   0x10
/////////////////////////////////////////////

///////////////////backward//////////////////
// reset timer
@0x10   0x02 // lw [0xF2] , $A
@0x11   0xF2
// read timer & check the elapsed time
@0x12   0x00 // sw $A , [0xF0]
@0x13   0xF0
@0x14   0x96 // beq [0x1A]
@0x15   0x1A
// move the car
@0x16   0x09 // call [0xC4]
@0x17   0xC4
@0x18   0x07 // jmp [0x12]
@0x19   0x12
// Call the braking function
@0x1A   0x09 // call [0xB0]
@0x1B   0xB0
// Jump to next
@0x1C   0x07 // jmp [0x20]
@0x1D   0x20
/////////////////////////////////////////////

/////////////////forward left////////////////
// reset timer
@0x20   0x02 // lw [0xF2] , $A
@0x21   0xF2
// read timer & check the elapsed time
@0x22   0x00 // sw $A , [0xF0]
@0x23   0xF0
@0x24   0x96 // beq [0x2A]
@0x25   0x2A
// move the car
@0x26   0x09 // call [0xC8]
@0x27   0xC8
@0x28   0x07 // jmp [0x22]
@0x29   0x22
// Call the braking function
@0x2A   0x09 // call [0xB0]
@0x2B   0xB0
// Jump to next
@0x2C   0x07 // jmp [0x30]
@0x2D   0x30
/////////////////////////////////////////////

////////////////backward right///////////////
// reset timer
@0x30   0x02 // lw [0xF2] , $A
@0x31   0xF2
// read timer & check the elapsed time
@0x32   0x00 // sw $A , [0xF0]
@0x33   0xF0
@0x34   0x96 // beq [0x3A]
@0x35   0x3A
// move the car
@0x36   0x09 // call [0xCC]
@0x37   0xCC
@0x38   0x07 // jmp [0x32]
@0x39   0x32
// Call the braking function
@0x3A   0x09 // call [0xB0]
@0x3B   0xB0
// Jump to next
@0x3C   0x07 // jmp [0x40]
@0x3D   0x40
/////////////////////////////////////////////

////////////////forward  right///////////////
// reset timer
@0x40   0x02 // lw [0xF2] , $A
@0x41   0xF2
// read timer & check the elapsed time
@0x42   0x00 // sw $A , [0xF0]
@0x43   0xF0
@0x44   0x96 // beq [0x4A]
@0x45   0x4A
// move the car
@0x46   0x09 // call [0xD0]
@0x47   0xD0
@0x48   0x07 // jmp [0x42]
@0x49   0x42
// Call the braking function
@0x4A   0x09 // call [0xB0]
@0x4B   0xB0
// Jump to next
@0x4C   0x07 // jmp [0x50]
@0x4D   0x50
/////////////////////////////////////////////

////////////////backward  left///////////////
// reset timer
@0x50   0x02 // lw [0xF2] , $A
@0x51   0xF2
// read timer & check the elapsed time
@0x52   0x00 // sw $A , [0xF0]
@0x53   0xF0
@0x54   0x96 // beq [0x5A]
@0x55   0x5A
// move the car
@0x56   0x09 // call [0xD4]
@0x57   0xD4
@0x58   0x07 // jmp [0x52]
@0x59   0x52
// Call the braking function
@0x5A   0x09 // call [0xB0]
@0x5B   0xB0
/////////////////////////////////////////////

@0x5C   0x02
@0x5D   0xF2
@0x5E   0x08

/////////////////////brake///////////////////
// reset timer
@0xB0   0x02 // lw [0xF2] , $A
@0xB1   0xF2
// read timer & check the elapsed time
@0xB2   0x00 // sw $A , [0xF0]
@0xB3   0xF0
@0xB4   0x96 // beq [0xBA]
@0xB5   0xBC
// brake the car
@0xB6   0x00 // sw $A , [00]
@0xB7   0x00
@0xB8   0x02 // lw [90] , $A
@0xB9   0x90
@0xBA   0x07 // jmp [0xB2]
@0xBB   0xB2
//return
@0xBC   0x0A // return
/////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////Car Control/////////////////////////////////////////////////////////
// forward
@0xC0   0x00 // sw $A , [14]
@0xC1   0x14
@0xC2   0x07 // jmp [0xE4]
@0xC3   0xE4

// backward
@0xC4   0x00 // sw $A , [15]
@0xC5   0x15
@0xC6   0x07 // jmp [0xE4]
@0xC7   0xE4

// forward left
@0xC8   0x00 // sw $A , [12]
@0xC9   0x12
@0xCA   0x07 // jmp [0xE4]
@0xCB   0xE4

// backward right
@0xCC   0x00 // sw $A , [11]
@0xCD   0x11
@0xCE   0x07 // jmp [0xE4]
@0xCF   0xE4

// forward right
@0xD0   0x00 // sw $A , [13]
@0xD1   0x13
@0xD2   0x07 // jmp [0xE4]
@0xD3   0xE4

// backward left
@0xD4   0x00 // sw $A , [10]
@0xD5   0x10
@0xD6   0x07 // jmp [0xE4]
@0xD7   0xE4

// brake
@0xE0   0x00 // sw $A , [00]
@0xE1   0x00
@0xE2   0x07 // jmp [0xE4]
@0xE3   0xE4
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////Write IO///////////////////////////////////////////////////////////
@0xE4   0x02 // lw [90] , $A
@0xE5   0x90
@0xE6   0x0A // return
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////Interrupt///////////////////////////////////////////////////////////
@0xFE   0x00   // Timer interrupt address
@0xFF   0x85 // Mouse interrupt address
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

@0x85 0x00  // sw $A , [0xA0]
@0x86 0xA0  // Mouse Status
@0x87 0x01  // sw $B , [0xA1]
@0x88 0xA1  // Mouse X
@0x89 0x02  // lw [0xC0] , $A
@0x8A 0xC0  // LED LSB
@0x8B 0x03  // lw [0xD0] , $A
@0x8C 0xD0  // SevenSeg MSB
@0x8D 0x00  // sw $A , [0xA2]
@0x8E 0xA2  // Mouse Y
@0x8F 0x01  // sw $B , [0xA3]
@0x90 0xA3  // Mouse Scroll
@0x91 0x02  // lw [0xD1] , $A
@0x92 0xD1  // SevenSeg LSB
@0x93 0x03  // lw [0xC1] , $B
@0x94 0xC1  // LED MSB
@0x95 0x08  // GOTO IDLE